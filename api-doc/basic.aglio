FORMAT: 1A

# project-dystopia API

## ユーザ登録 [/signup]

### サインアップ[POST]

 - DB上に重複したデバイスIDかユーザ名がある場合は登録処理は行われない。
 - 登録が成功した場合はログインキー(アクセストークン)を返却する


+ Request (application/json)
  {
    "device_id":"35-209900-176148-1", デバイスID
    "name":"nenecchi" ユーザ名
  }


+ Response 200 (application/json)
  {
    "login_key":"{base64文字列}" ログインキー
  }
  
+ Response 300 (application/json)
  {
  	"status":"ng","message":"user_id or device_id is duplicated"
  }


## ユーザステータス表示 [/users/:name/status?login_key=]

### ステータス表示[GET]

 - ログインキーを使ってユーザの情報を表示する

+ Response 200 (application/json)
	{
		"user_name":"nenecchi", ユーザ名
		"score":0, スコア
		"rank":0, ランク
		"win_count":0, 勝数
		"lose_count":0,負数
		"summer_vacation_days":0 残り夏休み日数
	}
  
+ Response 300 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }



## ユーザ装備更新 [/users/:name/status]

### 装備更新[PATCH]

 - ユーザの装備を更新する
 - ユーザは装備を2つ持つことが可能
	 - 各装備は`equipment1`、`equipment2`で表現される
	 - 一度に2つ更新することも可能


+ Request (application/json)
	{
	  	"equipment1":"SuperBall,装備スロット
	  	"login_key":"LOGIN_KEY" ログインキー
   }

+ Response 200 (application/json)
	{
		"user_name":"Nenecchi" ユーザ名
		"equipment1": "SuperBall", 装備したアイテム
		"equipment2": "None", 装備したアイテム
		"login_key":"LOGIN_KEY" ログインキー
	}
  
+ Response 300 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }

## アイテム表示 [/users/:name/items?login_key=]

### ステータス表示[GET]

 - ログインキーを使ってユーザのアイテムを表示する

+ Response 200 (application/json)
	{
	"items":
		[
			{
				"name":"SuperBall",　アイテムの名前
				"value":200, 価格
				"number":1　アイテムの個数
			}
		]
	}
  
+ Response 300 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }


## アイテム作成 [/users/:name/items]

### アイテム作成[POST]

 - アイテムを作成する
 - アイテムは各ユーザに紐づく
 - アイテムの所有数に上限はない

 + Request (application/json)
	{
		"name": "SuperBall", アイテム名
		"value": "200", 価格
		"number": "2"　アイテムの個数
		"login_key": "LOGIN_KEY", ログインキー

	}


+ Response 200 (application/json)
  {
  	"name":"SuperBall",
		"value":200,
		"number":2
  }
  
+ Response 300 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }


## ゲームスコア更新 [/users/:name/results]

### アイテム[POST]
 - 試合結果を送信する
 - 試合終了後に両プレイヤーにそれぞれ結果を送信することを想定している

 + Request (application/json)
	{
		"score": "200", スコア
		"vs": "win",　勝ち負けを送信(勝ったとは`win`、負けたときは`lose`)
		"login_key": "LOGIN_KEY"　ログインキー
	}


+ Response 200 (application/json)
  {
		"win_count":1, 勝数
		"lose_count":0,　負け数
		"summer_vacation_days":0 残り夏休み日数
  }
  
+ Response 300 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }

