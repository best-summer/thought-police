FORMAT: 1A

# project-dystopia API

## ユーザ登録 [/signup]

### サインアップ[POST]

 - DB上に重複したデバイスIDかユーザ名がある場合は登録処理は行われない。
 - 登録が成功した場合はログインキー(アクセストークン)を返却する


+ Request (application/json)
  {
    "device_id":"35-209900-176148-1", デバイスID
    "name":"nenecchi" ユーザ名
  }


+ Response 200 (application/json)
  {
		"login_key":"{base64文字列}" ログインキー
  }
  
+ Response 500 (application/json)
  {
  	"status":"ng","message":"user_id or device_id is duplicated"
  }


## ステータス表示 [/users/:device_id/status?login_key=]

### ステータス表示[GET]

 - ユーザの情報を表示する
 - ログインキーを使用する

+ Response 200 (application/json)
	{
		"name":"nenecchi", ユーザ名
		"score":0, スコア
		"rank":C, ランク
		"win_count":0, 勝数
		"lose_count":0,負数
		"billing":0,　課金額
	}
  
+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }


## アイテム表示 [/users/:device_id/items?login_key=]

### ステータス表示[GET]

 - アイテムを表示する
 - ログインキーを使用する 

+ Response 200 (application/json)
	{"items":
		[
			{"name":"SuperBall","value":200}, アイテム名、価格
			{"name":"UltraWater","value":1000}
		]
	}
  
+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }



## アイテム作成 [/users/:device_id/items]

### アイテム作成[POST]

 - アイテムを作成する
 - アイテムは各ユーザに紐づく

 + Request (application/json)
	{
		"name": "SuperBall", アイテム名
		"value": "200", 価格
		"login_key": "LOGIN_KEY", ログインキー
	}


+ Response 200 (application/json)
  {
  	"name":"SuperBall", アイテム名
		"value":200,　価格
  }
  
+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }




## ゲームスコア表示 [/users/:device_id/results]

### ゲームスコア表示[GET]
 - ユーザのスコアを表示する
 - ログインキーを使用する


+ Response 200 (application/json)
	{
		"name":"Nenecchi", 名前
		"score":200, スコア
		"win_count":5, 勝数
		"lose_count":2　負数
	}	

  
+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }




## ゲームスコア更新 [/users/:name/results]

### ゲームスコア更新[POST]
 - 試合結果を送信する
 - `win`,`lose`を送信することで勝敗数をインクリメントする
 - 試合終了後に両プレイヤーにそれぞれ結果を送信することを想定している

 + Request (application/json)
	{
		"score": "500", スコア
		"vs": "win", 勝敗
		"login_key": "LOGINKEY" ログインキー
	}

+ Response 200 (application/json)
	{
		"name":"Nenecchi", 名前
		"score":200, スコア
		"win_count":5, 勝数
		"lose_count":2　負数
	}
+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }



## アイテムガチャ [/gacha]

### アイテムガチャ[POST]
 - アイテムの抽選を行う
 - `low`,`middle`, `high`に応じて課金額とレアアイテム出現確率が変動する
 - `status`は既にそのアイテムを新規アイテムはダブリアイテムかを示す
		- `new`は既にそのアイテム
		- `duplicate`は重複アイテム


 + Request (application/json)
	{
		"device_id":"NenecchiID", デバイスID
		"value":"low",　ガチャのランク
		"login_key":LOGIN_KEY ログインキー
	}
+ Response 200 (application/json)
	{
		"status":"new", 新規アイテムor重複アイテム
		"normal":"Super Rare Item", アイテム名
		"rarity":"SR" アイテムレア度
	}

+ Response 500 (application/json)
  {
    "status":"ng","message":"Wrong login key"
  }